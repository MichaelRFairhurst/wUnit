module wunit;

import treflect.WakeProperty;
import treflect.ReflectionProvider;
import treflect.Annotation;
import wunit.Asserts;
import wunit.TestMethodFilterer;

@TestClass
every TestMethodFiltererTest is:

	needs ReflectionProvider, TestMethodFilterer;

	@Test
	testNoAnnotationsIsNot(Asserts) {
		Asserts.fail("fixme");
		#>
		var WakeProperty from ReflectionProvider;
		WakeProperty.name = "testBlah()";
		Asserts.that(TestMethodFilterer.isProperty(WakeProperty)ATestMethod())Equals(false);
		##
	}

	@Test
	testNoAnnotationsIs(Asserts) {
		Asserts.fail("fixme");
		#>
		var WakeProperty from ReflectionProvider;
		WakeProperty.name = "Banana";
		WakeProperty.Annotation[].push(Annotation("Test") from ReflectionProvider);
		Asserts.that(TestMethodFilterer.isProperty(WakeProperty)ATestMethod())Equals(true);
		##
	}
