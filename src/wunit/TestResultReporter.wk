module wunit;

import std.System;
import io.Printer;
import wunit.Asserts;

every TestResultReporter is:

	needs Printer, System;

	with Text class = "";
	with Text method = "";
	with Num testsrun = 0;
	with Num testsfailed = 0;
	with Num assertions = 0;
	with Num coltracker = 0;

	with Text[] output = [];

	begin(Text classname, Text methodname) {
		class = classname; method = methodname;
	}

	end(Asserts) {
		testsrun += 1;
		assertions += Asserts.getAssertions();

		if Asserts.hasFailed() then Printer.print("F");
		else Printer.print(".");

		coltracker += 1;
		if coltracker == 50 {
			coltracker -= 50;
			Printer.print(\n);
		}

		if !Asserts.hasFailed() then return;

		testsfailed += 1;

		output.push("Failure in " + class + "." + method + ":");

		foreach Asserts.getFailureTexts() {
			output.push(\t + Text);
		}

		output.push("");
	}

	report() {
		Printer.printLine("");
		Printer.printLine("");
		Printer.print("Tests Run: ");
		Printer.printLine(testsrun);
		Printer.print("Tests Failed: ");
		Printer.printLine(testsfailed);
		Printer.print("Assertions: ");
		Printer.printLine(assertions);
		Printer.printLine("");

		var Text[] = output; // @TODO foreachin
		foreach Text[] {
			Printer.printLine(Text);
		}

		if testsfailed > 0 then System.exit(1);
	}
